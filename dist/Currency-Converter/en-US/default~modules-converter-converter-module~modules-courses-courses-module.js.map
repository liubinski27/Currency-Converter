{"version":3,"sources":["./src/app/modules/shared/converter-shared.module.ts","./src/app/modules/shared/components/header/header.component.ts","./src/app/modules/shared/components/header/header.component.html","./src/app/modules/shared/components/footer/footer.component.ts","./src/app/modules/shared/components/footer/footer.component.html","./src/app/modules/shared/converter.interceptor.ts","./src/app/modules/shared/services/converter.service.ts"],"names":[],"mappings":"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","file":"default~modules-converter-converter-module~modules-courses-courses-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { ConverterService } from './services/converter.service';\nimport { SharedModule } from '../../shared/shared.module';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { ConverterInterceptor } from './converter.interceptor';\n\n@NgModule({\n    declarations: [\n        HeaderComponent,\n        FooterComponent\n    ],\n    providers: [\n        ConverterService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: ConverterInterceptor,\n            multi: true,\n        },\n    ],\n    imports: [\n        SharedModule\n    ],\n    exports: [\n        SharedModule,\n        HeaderComponent,\n        FooterComponent\n    ]\n})\n\nexport class ConverterSharedModule { }","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nenum LanguagesList {\n  RUSSIAN = 'ru',\n  ENGLISH = 'en'\n}\n\n@Component({\n  selector: 'converter-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\n\nexport class HeaderComponent {\n\n  eLanguagesList = LanguagesList;\n\n  constructor(\n    private translateService: TranslateService\n  ) { }\n\n  changeLang(language: string) {\n    this.translateService.use(language);\n  }\n}","<div class=\"container-fluid\">\n    <nav class=\"navbar navbar-expand-lg navbar-light\">\n        <a class=\"navbar-brand\" href=\"#\">Converter</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav mr-auto\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/courses\">{{ 'menu.currency.rates' | translate }}</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/converter\">{{ 'menu.currency.converter' | translate }}</a>\n                </li>\n                <li class=\"nav-item\">\n                    <div class=\"changeLang\">\n                        <button class=\"btn btn-default dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\"\n                            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                            <img src=\"../../assets/styles/pictures/languageSelectionIcon.png\" alt=\"language\">\n                            <span class=\"caret\"></span>\n                        </button>\n                        <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n                            <li (click)=\"changeLang(eLanguagesList.RUSSIAN)\">Русский</li>\n                            <li (click)=\"changeLang(eLanguagesList.ENGLISH)\">English</li>\n                        </ul>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </nav>\n</div>","import { ConverterService } from '../../services/converter.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ICurrency, ILoadedCurrency } from '../../models/currency';\n\n@Component({\n  selector: 'converter-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\n\nexport class FooterComponent implements OnInit {\n\n  currenciesList: ICurrency[];\n  selectedCurrencies: ICurrency[] = [];\n  selectedCurrenciesAbbreviations = ['USD', 'EUR', 'RUB', 'PLN', 'UAH', 'AUD'];\n\n  constructor(\n    private converterService: ConverterService\n  ) { }\n\n  getCurrencies(date: string = '') {\n    this.converterService.getCurrencies(date).subscribe((response: ILoadedCurrency[]) => {\n      this.currenciesList = ConverterService.processCurrencies(response);\n      if (this.currenciesList) {\n        this.addCurrenciesInFooter();\n      }\n    });\n  }\n\n  addCurrenciesInFooter() {\n    this.selectedCurrenciesAbbreviations.forEach(item => {\n      const foundCurrencyInCurrenciesList = this.converterService.findCurrency(this.currenciesList, item);\n      if (foundCurrencyInCurrenciesList) {\n        this.selectedCurrencies.push(foundCurrencyInCurrenciesList);\n      }\n    });\n  }\n\n  calculateRatesValue(currencyScale: number, currencyRate: number) {\n    const value = currencyRate / currencyScale;\n    return value.toFixed(4);\n  }\n\n  ngOnInit(): void {\n    this.getCurrencies();\n  }\n}","<div class=\"container-fluid\">\n    <div class=\"footer\">\n        <div class=\"logo\">\n            <p>{{ 'footer.title' | translate }}</p>\n        </div>\n        <div *ngIf=\"currenciesList; else error\" class=\"popularCourses\">\n            <ul>\n                <li *ngFor=\"let currency of selectedCurrencies\">\n                    <p>{{ currency.abbreviation }}</p>\n                    <p>{{ calculateRatesValue(currency.scale, currency.rate) }}</p>\n                </li>\n            </ul>\n        </div>\n        <ng-template #error>\n            <p class=\"loading\">{{ 'currencies.loading' | translate }}</p>\n        </ng-template>\n    </div>\n</div>","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { tap, catchError } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class ConverterInterceptor implements HttpInterceptor {\r\n  constructor(public toasterService: ToastrService) { }\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n\r\n    return next.handle(req).pipe(\r\n      tap(evt => {\r\n        if (evt instanceof HttpResponse) {\r\n          if (evt.body.length > 0) {\r\n            this.toasterService.success('Данные загружены', 'Готово', { positionClass: 'toast-center-center' });\r\n          };\r\n          if (evt.body.length === 0) {\r\n            this.toasterService.warning('На выбранную дату данных нет', 'Ошибка', { positionClass: 'toast-center-center' });\r\n          };\r\n        }\r\n      }),\r\n      catchError((error: any) => {\r\n        if (error instanceof HttpErrorResponse) {\r\n          this.toasterService.error('Сервер не отвечает', 'Ошибка', { positionClass: 'toast-center-center' });\r\n        }\r\n        return of(error);\r\n      }));\r\n\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { UrlService } from \"../../../shared/services/url.service\";\nimport { ILoadedCurrency } from '../models/currency';\nimport { ICurrency } from '../models/currency';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ConverterService {\n\n  currenciesList: ICurrency[];\n\n  constructor(\n    private http: HttpClient,\n    private urlService: UrlService\n  ) { }\n\n  getCurrencies(date: string) {\n    const url = this.urlService.getUrl(date);\n    return this.http.get(url);\n  }\n\n  public static processCurrencies(currencies: ILoadedCurrency[]): ICurrency[] {\n    return currencies.map(item => ({\n      id: item.Cur_ID,\n      date: item.Date,\n      abbreviation: item.Cur_Abbreviation,\n      scale: item.Cur_Scale,\n      name: item.Cur_Name,\n      rate: item.Cur_OfficialRate\n    }));\n  }\n\n  findCurrency(array: ICurrency[], currency: string) {\n    return array.find(item => item.abbreviation === currency);\n  }\n}"],"sourceRoot":"webpack:///"}